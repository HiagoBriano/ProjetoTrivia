{"ast":null,"code":"var _jsxFileName = \"/home/brenotainan/projetos/ProjetoTrivia/src/pages/Login/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getToken, getUser } from '../../redux/actions';\nimport { requestTriviaApi } from '../../services/triviApi';\nimport logo from '../../trivia-01.png';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandler = _ref => {\n      let {\n        name,\n        value\n      } = _ref;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.btnCheck();\n      });\n    };\n\n    this.btnCheck = () => {\n      const regexValidation = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g; // Referência do Regex: https://regexr.com/3e48o\n\n      const {\n        playerName,\n        playerEmail\n      } = this.state;\n\n      if (playerName.length !== 0 && regexValidation.test(playerEmail)) {\n        this.setState({\n          btnDisabled: false\n        });\n      } else {\n        this.setState({\n          btnDisabled: true\n        });\n      }\n    };\n\n    this.onClickHandler = async () => {\n      const {\n        setToken,\n        setUser,\n        history\n      } = this.props;\n      const request = await requestTriviaApi();\n      await setToken(request);\n      const {\n        playerName,\n        playerEmail\n      } = this.state;\n      setUser(playerName, playerEmail);\n      history.push('/jogo');\n    };\n\n    this.state = {\n      btnDisabled: true,\n      playerName: '',\n      playerEmail: ''\n    };\n  }\n\n  render() {\n    const {\n      btnDisabled,\n      playerName,\n      playerEmail\n    } = this.state;\n    const {\n      history\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"Nome do jogador:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"player-name\",\n      name: \"playerName\",\n      \"data-testid\": \"input-player-name\",\n      value: playerName,\n      onChange: event => this.onChangeHandler(event.target),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"player-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"E-mail do jogador:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"player-email\",\n      name: \"playerEmail\",\n      \"data-testid\": \"input-gravatar-email\",\n      value: playerEmail,\n      onChange: event => this.onChangeHandler(event.target),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-play\",\n      disabled: btnDisabled,\n      onClick: () => {\n        this.onClickHandler();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Play\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-settings\",\n      onClick: () => history.push('/config'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"Configura\\xE7\\xE3o\"))));\n  }\n\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired,\n  setUser: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setToken: payload => dispatch(getToken(payload)),\n  setUser: (name, email) => dispatch(getUser(name, email))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/brenotainan/projetos/ProjetoTrivia/src/pages/Login/index.js"],"names":["React","Component","connect","PropTypes","getToken","getUser","requestTriviaApi","logo","Login","constructor","props","onChangeHandler","name","value","setState","btnCheck","regexValidation","playerName","playerEmail","state","length","test","btnDisabled","onClickHandler","setToken","setUser","history","request","push","render","event","target","propTypes","func","isRequired","shape","mapDispatchToProps","dispatch","payload","email"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getToken, getUser } from '../../redux/actions';\nimport { requestTriviaApi } from '../../services/triviApi';\nimport logo from '../../trivia-01.png';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      btnDisabled: true,\n      playerName: '',\n      playerEmail: '',\n    };\n  }\n\n  onChangeHandler = ({ name, value }) => {\n    this.setState({\n      [name]: value,\n    }, () => { this.btnCheck(); });\n  }\n\n  btnCheck = () => {\n    const regexValidation = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n    // Referência do Regex: https://regexr.com/3e48o\n    const { playerName, playerEmail } = this.state;\n\n    if (playerName.length !== 0 && regexValidation.test(playerEmail)) {\n      this.setState({ btnDisabled: false });\n    } else {\n      this.setState({ btnDisabled: true });\n    }\n  }\n\n  onClickHandler = async () => {\n    const { setToken, setUser, history } = this.props;\n    const request = await requestTriviaApi();\n    await setToken(request);\n    const { playerName, playerEmail } = this.state;\n    setUser(playerName, playerEmail);\n    history.push('/jogo');\n  }\n\n  render() {\n    const { btnDisabled, playerName, playerEmail } = this.state;\n    const { history } = this.props;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={ logo } className=\"App-logo\" alt=\"logo\" />\n          <form>\n            <label htmlFor=\"player-name\">\n              Nome do jogador:\n              <input\n                type=\"text\"\n                id=\"player-name\"\n                name=\"playerName\"\n                data-testid=\"input-player-name\"\n                value={ playerName }\n                onChange={ (event) => this.onChangeHandler(event.target) }\n              />\n            </label>\n            <label htmlFor=\"player-email\">\n              E-mail do jogador:\n              <input\n                type=\"text\"\n                id=\"player-email\"\n                name=\"playerEmail\"\n                data-testid=\"input-gravatar-email\"\n                value={ playerEmail }\n                onChange={ (event) => this.onChangeHandler(event.target) }\n              />\n            </label>\n            <button\n              type=\"button\"\n              data-testid=\"btn-play\"\n              disabled={ btnDisabled }\n              onClick={ () => {\n                this.onClickHandler();\n              } }\n            >\n              Play\n            </button>\n            <button\n              type=\"button\"\n              data-testid=\"btn-settings\"\n              onClick={ () => (history.push('/config')) }\n            >\n              Configuração\n            </button>\n          </form>\n        </header>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired,\n  setUser: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setToken: (payload) => dispatch(getToken(payload)),\n  setUser: (name, email) => dispatch(getUser(name, email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}