{"ast":null,"code":"var _jsxFileName = \"/home/brenotainan/projetos/ProjetoTrivia/src/pages/Feedback/index.js\";\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../../components/Header';\n\nclass Feedback extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.saveRankingLs = () => {\n      const {\n        score,\n        name,\n        email\n      } = this.props;\n      const hash = md5(email).toString();\n      const picture = `https://www.gravatar.com/avatar/${hash}`;\n\n      if (localStorage.getItem('ranking')) {\n        const ranking = JSON.parse(localStorage.getItem('ranking'));\n        ranking.push({\n          name,\n          score,\n          picture\n        });\n        localStorage.setItem('ranking', JSON.stringify(ranking));\n      } else {\n        localStorage.setItem('ranking', JSON.stringify([{\n          name,\n          score,\n          picture\n        }]));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.saveRankingLs();\n  }\n\n  render() {\n    const {\n      score,\n      assertions,\n      history\n    } = this.props;\n    const validation = 3;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, assertions >= validation ? /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"feedback-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }\n    }, \"Well Done!\") : /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"feedback-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }\n    }, \"Could be better...\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"pontua\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"Pontua\\xE7\\xE3o\", /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"feedback-total-score\",\n      id: \"pontua\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, score)), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Acertos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"feedback-total-question\",\n      id: \"Acertos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, assertions))), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-play-again\",\n      onClick: () => history.push('/'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"Play Again\")), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"btn-ranking\",\n      type: \"button\",\n      onClick: () => history.push('/ranking'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Ranking\"));\n  }\n\n}\n\nFeedback.propTypes = {\n  score: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  assertions: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }).isRequired\n};\n\nconst mapStateToProps = state => ({\n  score: state.player.score,\n  assertions: state.player.assertions,\n  name: state.player.name,\n  email: state.player.gravatarEmail\n});\n\nexport default connect(mapStateToProps)(Feedback);","map":{"version":3,"sources":["/home/brenotainan/projetos/ProjetoTrivia/src/pages/Feedback/index.js"],"names":["md5","PropTypes","React","Component","connect","Header","Feedback","saveRankingLs","score","name","email","props","hash","toString","picture","localStorage","getItem","ranking","JSON","parse","push","setItem","stringify","componentDidMount","render","assertions","history","validation","propTypes","number","isRequired","string","shape","func","mapStateToProps","state","player","gravatarEmail"],"mappings":"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","sourcesContent":["import md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../../components/Header';\n\nclass Feedback extends Component {\n  componentDidMount() {\n    this.saveRankingLs();\n  }\n\n  saveRankingLs= () => {\n    const { score, name, email } = this.props;\n    const hash = md5(email).toString();\n    const picture = `https://www.gravatar.com/avatar/${hash}`;\n    if (localStorage.getItem('ranking')) {\n      const ranking = JSON.parse(localStorage.getItem('ranking'));\n      ranking.push({\n        name,\n        score,\n        picture,\n      });\n      localStorage.setItem('ranking', JSON.stringify(ranking));\n    } else {\n      localStorage.setItem('ranking', JSON.stringify([{\n        name,\n        score,\n        picture,\n      }]));\n    }\n  }\n\n  render() {\n    const { score, assertions, history } = this.props;\n    const validation = 3;\n    return (\n      <div>\n        <Header />\n        <section>\n          {\n            assertions >= validation\n              ? (<h2 data-testid=\"feedback-text\">Well Done!</h2>)\n              : (<h2 data-testid=\"feedback-text\">Could be better...</h2>)\n          }\n          <label htmlFor=\"pontuação\">\n            Pontuação\n            <h2 data-testid=\"feedback-total-score\" id=\"pontuação\">\n              { score }\n            </h2>\n          </label>\n          <label htmlFor=\"Acertos\">\n            <h2 data-testid=\"feedback-total-question\" id=\"Acertos\">\n              { assertions }\n            </h2>\n          </label>\n        </section>\n        <section>\n          <button\n            type=\"button\"\n            data-testid=\"btn-play-again\"\n            onClick={ () => history.push('/') }\n          >\n            Play Again\n          </button>\n        </section>\n        <button\n          data-testid=\"btn-ranking\"\n          type=\"button\"\n          onClick={ () => (history.push('/ranking')) }\n        >\n          Ranking\n        </button>\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  score: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  assertions: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  score: state.player.score,\n  assertions: state.player.assertions,\n  name: state.player.name,\n  email: state.player.gravatarEmail,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n"]},"metadata":{},"sourceType":"module"}