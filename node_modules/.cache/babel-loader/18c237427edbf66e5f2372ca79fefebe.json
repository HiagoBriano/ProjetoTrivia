{"ast":null,"code":"import { GET_USER, PLAYER_ASSERTIONS, PLAYER_POINTS } from '../actions';\nconst INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: ''\n};\n\nconst player = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_USER:\n      return { ...state,\n        name: action.name,\n        gravatarEmail: action.email,\n        score: 0,\n        assertions: 0\n      };\n\n    case PLAYER_POINTS:\n      return { ...state,\n        score: state.score + action.payload\n      };\n\n    case PLAYER_ASSERTIONS:\n      return { ...state,\n        assertions: state.assertions + action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default player;","map":{"version":3,"sources":["/home/brenotainan/projetos/ProjetoTrivia/src/redux/reducers/player.js"],"names":["GET_USER","PLAYER_ASSERTIONS","PLAYER_POINTS","INITIAL_STATE","name","assertions","score","gravatarEmail","player","state","action","type","email","payload"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,iBAAnB,EAAsCC,aAAtC,QAA2D,YAA3D;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,UAAU,EAAE,CAFQ;AAGpBC,EAAAA,KAAK,EAAE,CAHa;AAIpBC,EAAAA,aAAa,EAAE;AAJK,CAAtB;;AAOA,MAAMC,MAAM,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BN,aAA0B;AAAA,MAAXO,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKX,QAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELL,QAAAA,IAAI,EAAEM,MAAM,CAACN,IAFR;AAGLG,QAAAA,aAAa,EAAEG,MAAM,CAACE,KAHjB;AAILN,QAAAA,KAAK,EAAE,CAJF;AAKLD,QAAAA,UAAU,EAAE;AALP,OAAP;;AAOF,SAAKH,aAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACG;AAFvB,OAAP;;AAIF,SAAKZ,iBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,UAAU,EAAEI,KAAK,CAACJ,UAAN,GAAmBK,MAAM,CAACG;AAFjC,OAAP;;AAIF;AACE,aAAOJ,KAAP;AApBF;AAsBD,CAvBD;;AAyBA,eAAeD,MAAf","sourcesContent":["import { GET_USER, PLAYER_ASSERTIONS, PLAYER_POINTS } from '../actions';\n\nconst INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n};\n\nconst player = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case GET_USER:\n    return {\n      ...state,\n      name: action.name,\n      gravatarEmail: action.email,\n      score: 0,\n      assertions: 0,\n    };\n  case PLAYER_POINTS:\n    return {\n      ...state,\n      score: state.score + action.payload,\n    };\n  case PLAYER_ASSERTIONS:\n    return {\n      ...state,\n      assertions: state.assertions + action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default player;\n"]},"metadata":{},"sourceType":"module"}