{"version":3,"sources":["trivia-01.png","pages/Login/engrenagem3.svg","redux/actions/index.js","services/triviApi.js","pages/Login/index.js","components/Header.js","components/Questions.js","pages/Game/index.js","pages/Settings/index.js","pages/Feedback/index.js","pages/Ranking/index.js","App.js","redux/reducers/player.js","redux/reducers/token.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["module","exports","getToken","payload","type","requestTriviaApi","a","fetch","request","json","response","localStorage","setItem","token","fetchQuestionsAPi","link","requestQuestionsApi","ERROR_CODE_3","response_code","newApiResult","Login","props","onChangeHandler","name","value","setState","btnCheck","state","playerName","playerEmail","length","test","btnDisabled","onClickHandler","setToken","setUser","history","push","this","className","src","logo","alt","placeholder","id","data-testid","onChange","event","target","htmlFor","disabled","onClick","configBtn","title","Component","connect","dispatch","email","getUser","Header","userName","score","hash","md5","toString","imageUrl","player","gravatarEmail","Questions","startTimer","counter","setInterval","timer","stopTimer","resposta","clearInterval","getQuestions","apiResult","questions","results","haveOptions","prepareAnswers","correct_answer","incorrect_answers","answerSelected","playerScore","nextQuestion","atualQuestion","prevState","renderAnswers","embaralhar","arr","i","j","Math","floor","random","correct","incorrects","respostas","console","log","pronto","map","atual","index","certa","classe","embaralhado","misturado","class","Parser","category","question","item","key","e","setPoints","setAssertions","difficulty","playerPoints","playerAssertions","Game","Settings","Feedback","saveRankingLs","picture","getItem","ranking","JSON","parse","stringify","assertions","Ranking","sort","b","width","height","App","exact","path","component","React","INITIAL_STATE","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","Cypress","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.904331ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trivia-01.8397b8e7.png\";","module.exports = __webpack_public_path__ + \"static/media/engrenagem3.9c8463bf.svg\";","export const GET_TOKEN = 'GET_TOKEN';\nexport const GET_USER = 'GET_USER';\nexport const PLAYER_POINTS = 'PLAYER_POINT';\nexport const PLAYER_ASSERTIONS = 'PLAYER_ASSERTIONS';\n\nexport function getToken(payload) {\n  return {\n    type: GET_TOKEN,\n    payload,\n  };\n}\n\nexport function getUser(name, email) {\n  return {\n    type: GET_USER,\n    name,\n    email,\n  };\n}\n\nexport function playerPoints(payload) {\n  return {\n    type: PLAYER_POINTS,\n    payload,\n  };\n}\n\nexport function playerAssertions(payload) {\n  return {\n    type: PLAYER_ASSERTIONS,\n    payload,\n  };\n}\n","import { getToken } from '../redux/actions';\n\nexport const requestTriviaApi = async () => {\n  const link = 'https://opentdb.com/api_token.php?command=request';\n  const request = await fetch(link);\n  const response = await request.json();\n\n  localStorage.setItem('token', response.token);\n  return response.token;\n};\n\nconst fetchQuestionsAPi = async (token) => {\n  const link = `https://opentdb.com/api.php?amount=5&token=${token}`;\n  const request = await fetch(link);\n  const response = await request.json();\n\n  return response;\n};\n\nexport const requestQuestionsApi = async (token) => {\n  const ERROR_CODE_3 = 3;\n\n  const response = await fetchQuestionsAPi(token);\n\n  if (response.response_code === ERROR_CODE_3) {\n    const request = await requestTriviaApi();\n    getToken(request);\n    const newApiResult = await requestQuestionsApi(request);\n    return newApiResult;\n  }\n\n  return response;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getToken, getUser } from '../../redux/actions';\nimport { requestTriviaApi } from '../../services/triviApi';\nimport logo from '../../trivia-01.png';\nimport './Login.css';\nimport configBtn from './engrenagem3.svg';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      btnDisabled: true,\n      playerName: '',\n      playerEmail: '',\n    };\n  }\n\n  onChangeHandler = ({ name, value }) => {\n    this.setState({\n      [name]: value,\n    }, () => { this.btnCheck(); });\n  }\n\n  btnCheck = () => {\n    const regexValidation = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n    // Referência do Regex: https://regexr.com/3e48o\n    const { playerName, playerEmail } = this.state;\n\n    if (playerName.length !== 0 && regexValidation.test(playerEmail)) {\n      this.setState({ btnDisabled: false });\n    } else {\n      this.setState({ btnDisabled: true });\n    }\n  }\n\n  onClickHandler = async () => {\n    const { setToken, setUser, history } = this.props;\n    const request = await requestTriviaApi();\n    await setToken(request);\n    const { playerName, playerEmail } = this.state;\n    setUser(playerName, playerEmail);\n    history.push('/jogo');\n  }\n\n  render() {\n    const { btnDisabled, playerName, playerEmail } = this.state;\n    const { history } = this.props;\n\n    return (\n      <div className=\"login\">\n        <header className=\"login--header\">\n          <img src={ logo } className=\"login--logo\" alt=\"logo\" />\n        </header>\n        <main className=\"login--container\">\n          <form className=\"login--form\">\n            <div className=\"login--form-group\">\n              <input\n                className=\"login--form-control\"\n                placeholder=\"username\"\n                type=\"text\"\n                id=\"player-name\"\n                name=\"playerName\"\n                data-testid=\"input-player-name\"\n                value={ playerName }\n                onChange={ (event) => this.onChangeHandler(event.target) }\n              />\n              <label htmlFor=\"player-name\" className=\"login--form-label\">\n                Nome do jogador\n              </label>\n            </div>\n            \n            <div className=\"login--form-group\">\n              <input\n                className=\"login--form-control\"\n                placeholder=\"e-mail\"\n                type=\"text\"\n                id=\"player-email\"\n                name=\"playerEmail\"\n                data-testid=\"input-gravatar-email\"\n                value={ playerEmail }\n                onChange={ (event) => this.onChangeHandler(event.target) }\n              />\n              <label htmlFor=\"player-email\" className=\"login--form-label\">\n                E-mail do jogador\n              </label>\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"login--button\"\n              data-testid=\"btn-play\"\n              disabled={ btnDisabled }\n              onClick={ () => {\n                this.onClickHandler();\n              } }\n            >\n              <span></span>\n              <span></span>\n              <span></span>\n              <span></span>\n              Play\n            </button>\n\n            <button\n              className=\"login--config-btn\"\n              type=\"button\"\n              data-testid=\"btn-settings\"\n              onClick={ () => (history.push('/config')) }\n            >\n              <img src={ configBtn } alt=\"configuração\" title=\"Configurações\" />\n            </button>\n          </form>\n        </main>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired,\n  setUser: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setToken: (payload) => dispatch(getToken(payload)),\n  setUser: (name, email) => dispatch(getUser(name, email)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './Header.css';\n\nclass Header extends Component {\n  render() {\n    const {\n      userName,\n      email,\n      score,\n    } = this.props;\n    const hash = md5(email).toString();\n    const imageUrl = `https://www.gravatar.com/avatar/${hash}`;\n    return (\n      <div id=\"header\">\n        <img className=\"image-user\"\n          data-testid=\"header-profile-picture\"\n          src={imageUrl}\n          alt=\"Imagem do jogador\"\n        />\n        <section className=\"name-and-score\">\n          <section className=\"name-and-score-internal\">\n            <div className=\"player-score-header\">\n              <p>Jogador: {userName} </p>\n              <p>Pontos: {score} </p>\n            </div>\n          </section>\n        </section>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  userName: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userName: state.player.name,\n  email: state.player.gravatarEmail,\n  score: state.player.score,\n});\n\nexport default connect(mapStateToProps)(Header);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getToken, playerAssertions, playerPoints } from '../redux/actions';\nimport { requestQuestionsApi } from '../services/triviApi';\nimport './Questions.css';\nimport Parser from 'html-react-parser';\n\nconst validation = 'correct-answer';\n\nclass Questions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      questions: ['a'],\n      atualQuestion: 0,\n      counter: 0,\n      resposta: false,\n      timer: 30,\n      btnDisabled: false,\n      misturado: [],\n      haveOptions: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n    this.startTimer();\n  }\n\n  startTimer = () => {\n    const ONE_SECOND = 1000;\n    this.counter = setInterval(() => {\n      const { timer } = this.state;\n      if (timer > 0) {\n        this.setState({\n          timer: timer - 1,\n        });\n      }\n      if (timer === 0) {\n        this.stopTimer();\n      }\n    }, ONE_SECOND);\n  }\n\n  stopTimer = () => {\n    this.setState({ resposta: true, btnDisabled: true });\n    clearInterval(this.counter);\n  }\n\n  getQuestions = async () => {\n    const { token } = this.props;\n    const apiResult = await requestQuestionsApi(token);\n\n    this.setState({\n      questions: apiResult.results,\n      haveOptions: true,\n    });\n    const { questions, counter } = this.state;\n\n    this.prepareAnswers(questions[counter].correct_answer,\n      questions[counter].incorrect_answers);\n    this.setState({\n      questions: apiResult.results,\n      haveOptions: true,\n    });\n  }\n\n  answerSelected = ({ target }) => {\n    this.setState({\n      resposta: true,\n    });\n    if (target.name === validation) {\n      this.playerScore();\n    }\n    this.stopTimer();\n  }\n\n  nextQuestion = () => {\n    const { questions, atualQuestion } = this.state;\n    const { history } = this.props;\n    if (atualQuestion < (questions.length - 1)) {\n      this.setState((prevState) => ({\n        atualQuestion: prevState.atualQuestion + 1,\n        counter: prevState.counter + 1,\n        resposta: false,\n        timer: 30,\n        btnDisabled: false,\n      }), () => {\n        const { counter } = this.state;\n        this.prepareAnswers(questions[counter].correct_answer,\n          questions[counter].incorrect_answers);\n      });\n      this.renderAnswers();\n      this.startTimer();\n    } else {\n      history.push('/feedback');\n    }\n  }\n\n  embaralhar = (arr) => {\n    // função do site: https://www.horadecodar.com.br/2021/05/10/como-embaralhar-um-array-em-javascript-shuffle/\n    for (let i = arr.length - 1; i > 0; i -= 1) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    }\n    return arr;\n  }\n\n  prepareAnswers = (correct = '', incorrects = []) => {\n    const respostas = [...incorrects, correct];\n    console.log(correct);\n    const pronto = respostas.map((atual, index) => (\n      ((respostas.length - 1) === index)\n        ? {\n          resposta: atual,\n          certa: true,\n          classe: 'buttonGreen',\n        }\n        : {\n          resposta: atual,\n          certa: false,\n          classe: 'buttonRed',\n        }\n    ));\n\n    const embaralhado = this.embaralhar(pronto);\n    this.setState({ misturado: embaralhado });\n  }\n\n  renderAnswers = () => {\n    const {\n      questions,\n      counter,\n      misturado,\n      resposta,\n      btnDisabled,\n    } = this.state;\n\n    return (\n      <div className=\"pag-questions\">\n        <h2 class=\"question-category\" data-testid=\"question-category\">{Parser(questions[counter].category)}</h2>\n        <h3 class=\"question-text\" data-testid=\"question-text\">{Parser(questions[counter].question)}</h3>\n        <section data-testid=\"answer-options\">\n          {misturado.map((item, index) => (\n            <div class=\"choice-container\">\n              <button\n                key={index}\n                type=\"button\"\n                name={\n                  item.certa ? validation : `wrong-answer-${index}`\n                }\n                data-testid={\n                  item.certa ? validation : `wrong-answer-${index}`\n                }\n                disabled={btnDisabled}\n                className={resposta ? item.classe : 'choice-text'}\n                onClick={\n                  (e) => this.answerSelected(e)\n                }\n                id='botao-questions'\n              >\n                {Parser(item.resposta)}\n              </button>\n            </div>\n          ))}\n        </section>\n      </div>\n    );\n  }\n\n  playerScore() {\n    const { questions, counter, timer } = this.state;\n    const { setPoints, setAssertions } = this.props;\n    let levelQuestion = 0;\n    const hard = 3;\n    const medium = 2;\n    const easy = 1;\n    const ten = 10;\n    if (questions[counter].difficulty === 'easy') {\n      levelQuestion = easy;\n    } else if (questions[counter].difficulty === 'medium') {\n      levelQuestion = medium;\n    } else {\n      levelQuestion = hard;\n    }\n    const mathPoint = ten + (levelQuestion * timer);\n\n    setPoints(mathPoint);\n    setAssertions(1);\n  }\n\n  render() {\n    const {\n      resposta,\n      haveOptions,\n      timer,\n    } = this.state;\n\n    return (\n      <section>\n        <section class=\"container\">\n          <section class=\"position-circular\">\n            {timer <= 30 && timer && !resposta\n              ? (\n                <div class=\"circular\">\n                  <div class=\"inner\"></div>\n                  <div class=\"outer\"></div>\n                  <div class=\"numb\">\n                    {timer}\n                  </div>\n                  <div class=\"circle\">\n                    <div class=\"dot\">\n                      <span></span>\n                    </div>\n                    <div class=\"bar left\">\n                      <div class=\"progress\"></div>\n                    </div>\n                    <div class=\"bar right\">\n                      <div class=\"progress\"></div>\n                    </div>\n                  </div>\n                </div>\n              ) : (\n                <div class=\"circular danger\">\n                  <div class=\"inner\"></div>\n                  <div class=\"outer\"></div>\n                  <div class=\"numb\">\n                    {timer}\n                  </div>\n                </div>\n              )\n            }\n          </section>\n\n          {!haveOptions\n            ? (<p>Carregando</p>)\n            : (\n              <div class=\"container-internal\">\n                {this.renderAnswers()}\n              </div>\n            )}\n          {resposta\n            && (\n              <button\n                class=\"btn-questions\"\n                type=\"button\"\n                data-testid=\"btn-next\"\n                onClick={this.nextQuestion}\n              >\n                <span></span>\n                <span></span>\n                <span></span>\n                <span></span>\n                Next\n              </button>\n            )}\n        </section>\n\n      </section>\n    );\n  }\n}\n\nQuestions.propTypes = {\n  setToken: PropTypes.func,\n  token: PropTypes.string,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  token: state.token,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setToken: (payload) => dispatch(getToken(payload)),\n  setPoints: (payload) => dispatch(playerPoints(payload)),\n  setAssertions: (payload) => dispatch(playerAssertions(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Header from '../../components/Header';\nimport Questions from '../../components/Questions';\n\nexport default class Game extends Component {\n  render() {\n    const { history } = this.props;\n    return (\n      <div>\n        <Header />\n        <Questions history={ history } />\n      </div>\n    );\n  }\n}\n\nGame.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n}.isRequired;\n","import React, { Component } from 'react';\n\nexport default class Settings extends Component {\n  render() {\n    const { history } = this.props;\n    return (\n      <div data-testid=\"settings-title\">\n        Settings\n        <center>\n          <a\n            data-testid=\"btn-go-home\"\n            type=\"button\"\n            onClick={() => history.push('/')}\n            className='ranking-botao'\n          >\n            <span></span>\n            <span></span>\n            <span></span>\n            <span></span>\n            <center>Inicio</center>\n          </a>\n        </center>\n      </div>\n    );\n  }\n}\n","import md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../../components/Header';\nimport './Feedback.css';\n\nclass Feedback extends Component {\n  componentDidMount() {\n    this.saveRankingLs();\n  }\n\n  saveRankingLs= () => {\n    const { score, name, email } = this.props;\n    const hash = md5(email).toString();\n    const picture = `https://www.gravatar.com/avatar/${hash}`;\n    if (localStorage.getItem('ranking')) {\n      const ranking = JSON.parse(localStorage.getItem('ranking'));\n      ranking.push({\n        name,\n        score,\n        picture,\n      });\n      localStorage.setItem('ranking', JSON.stringify(ranking));\n    } else {\n      localStorage.setItem('ranking', JSON.stringify([{\n        name,\n        score,\n        picture,\n      }]));\n    }\n  }\n\n  render() {\n    const { score, assertions, history } = this.props;\n    const validation = 3;\n    return (\n      <div>\n        <Header />\n        <section className=\"feedback-box\">\n          {\n            assertions >= validation\n              ? (<h2 data-testid=\"feedback-text\" className=\"title\">Well Done!</h2>)\n              : (<h2 data-testid=\"feedback-text\" className=\"title\">Could be better...</h2>)\n          }\n          <label htmlFor=\"pontuação\" className=\"score\">\n            Pontuação\n            <h2 data-testid=\"feedback-total-score\" id=\"pontuação\">\n              { score }\n            </h2>\n          </label>\n          <label htmlFor=\"Acertos\" className=\"score\">\n            Acertos\n            <h2 data-testid=\"feedback-total-question\" id=\"Acertos\">\n              { assertions }\n            </h2>\n          </label>\n        </section>\n        <section className=\"button-container\">\n          <button\n            className=\"botao\"\n            type=\"button\"\n            data-testid=\"btn-play-again\"\n            onClick={ () => history.push('/') }\n          >\n            <span/>\n            <span/>\n            <span/>\n            <span/>\n            Play Again\n          </button>\n          <button\n            className=\"botao\"\n            data-testid=\"btn-ranking\"\n            type=\"button\"\n            onClick={ () => (history.push('/ranking')) }\n          >\n            <span/>\n            <span/>\n            <span/>\n            <span/>\n            Ranking\n          </button>\n        </section>\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  score: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  assertions: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  score: state.player.score,\n  assertions: state.player.assertions,\n  name: state.player.name,\n  email: state.player.gravatarEmail,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\nexport default class Ranking extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ranking: JSON.parse(localStorage.getItem('ranking')),\n    };\n  }\n\n  render() {\n    const { history } = this.props;\n    const { ranking } = this.state;\n\n    return (\n      <div className=\"ranking-div\">\n        <h1 data-testid=\"ranking-title\">\n          <center>Ranking</center>\n        </h1>\n        <section className=\"ranking-section\">\n          <ol className=\"ranking-lista\">\n            {ranking\n              .sort((a, b) => b.score - a.score)\n              .map(({ name, picture, score }, index) => (\n                <li key={index} className=\"ranking-jogador\">\n                  <div className='tamanho-ranking'>\n                    {\n                      index === 0\n                      ? <img src='https://www.showdomilhao.com.br/static/media/primeiro.4ca9d46c.webp' />\n                      : null\n                    }\n                    {\n                      index === 1\n                      ? <img src='https://www.showdomilhao.com.br/static/media/segundo.b6d2518e.webp' />\n                      : null\n                    }\n                    {\n                      index === 2\n                      ? <img src='https://www.showdomilhao.com.br/static/media/terceiro.f53712d5.webp' />\n                      : null\n                    }\n                    {\n                      index > 2\n                      ? <span className=\"texto\">{`${index + 1}°`}</span>\n                      : null\n                    }\n                  </div>\n                  <div className='tamanho-ranking'>\n                    <img\n                      src={picture}\n                      alt=\"player\"\n                      className=\"ranking-foto\"\n                      width=\"45px\"\n                      height=\"45px\"\n                    />\n                  </div>\n                  <div className='tamanho-ranking'>\n                    <span className=\"texto\" data-testid={`player-name-${index}`}>{name}</span>\n                  </div>\n                  <div className='tamanho-ranking'>\n                    <span className=\"texto\" data-testid={`player-score-${index}`}>{score}</span>\n                  </div>\n                </li>\n              ))}\n          </ol>\n        </section>\n        <center>\n          <a\n            data-testid=\"btn-go-home\"\n            type=\"button\"\n            onClick={() => history.push('/')}\n            className='ranking-botao'\n          >\n            <span></span>\n            <span></span>\n            <span></span>\n            <span></span>\n            <center>Inicio</center>\n          </a>\n        </center>\n      </div>\n    );\n  }\n}\n\nRanking.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport './App.css';\nimport Game from './pages/Game';\nimport Settings from './pages/Settings';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/jogo\" component={Game} />\n        <Route exact path=\"/config\" component={Settings} />\n        <Route exact path=\"/feedback\" component={Feedback} />\n        <Route exact path=\"/ranking\" component={Ranking} />\n      </Switch>\n    );\n  }\n}\n","import { GET_USER, PLAYER_ASSERTIONS, PLAYER_POINTS } from '../actions';\n\nconst INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n};\n\nconst player = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case GET_USER:\n    return {\n      ...state,\n      name: action.name,\n      gravatarEmail: action.email,\n      score: 0,\n      assertions: 0,\n    };\n  case PLAYER_POINTS:\n    return {\n      ...state,\n      score: state.score + action.payload,\n    };\n  case PLAYER_ASSERTIONS:\n    return {\n      ...state,\n      assertions: state.assertions + action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default player;\n","import { GET_TOKEN } from '../actions';\n\nconst INITIAL_STATE = '';\n\nconst token = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case GET_TOKEN:\n    return action.payload;\n  default:\n    return state;\n  }\n};\n\nexport default token;\n","import { combineReducers } from 'redux';\nimport player from './player';\nimport token from './token';\n\nconst rootReducer = combineReducers({\n  player,\n  token,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={ store }>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}